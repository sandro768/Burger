{"ast":null,"code":"var _jsxFileName = \"/home/sandro/WebstormProjects/burger/src/components/Burger/Burger.js\";\nimport React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    // Array(3) would give us an array with 3 empty elements.\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      });\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n  if (transformedIngredients.length) return React.createElement(\"div\", {\n    className: classes.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(BurgerIngredient, {\n    type: 'bread-top',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), transformedIngredients, React.createElement(BurgerIngredient, {\n    type: 'bread-bottom',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/home/sandro/WebstormProjects/burger/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAA+BC,GAA/B,CACzBC,KAAK,IAAI;AACL;AACA,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACtD,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAA/B;AAAkC,QAAA,IAAI,EAAEH,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GANwB,EAO3BI,MAP2B,CAOpB,CAACC,GAAD,EAAMC,EAAN,KAAa;AAClB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GAT4B,EAS1B,EAT0B,CAA7B;AAUA,MAAIX,sBAAsB,CAACa,MAA3B,EACA,OACI;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKd,sBAFL,EAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAnBD;;AAqBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients).map(\n        igKey => {\n            // Array(3) would give us an array with 3 empty elements.\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey}/>\n            })\n        }\n    ).reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n    if (transformedIngredients.length)\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type={'bread-top'}/>\n            {transformedIngredients}\n            <BurgerIngredient type={'bread-bottom'}/>\n        </div>\n    );\n};\n\nexport default burger;"]},"metadata":{},"sourceType":"module"}