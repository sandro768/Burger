{"ast":null,"code":"import _defineProperty from \"/home/sandro/WebstormProjects/burger/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sandro/WebstormProjects/burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = _objectSpread({}, this.state.ingredients);\n\n    const sum = Object.keys(ingredients);\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disableInfo,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/sandro/WebstormProjects/burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","updatePurchaseState","sum","Object","keys","render","disableInfo","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCU,KADkC,GAC1B;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,KAAK,EAAE,CAFE;AAGTF,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJK,MAAAA,UAAU,EAAE,CAPR;AAQJC,MAAAA,WAAW,EAAE;AART,KAD0B;;AAAA,SAmBlCC,oBAnBkC,GAmBVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,WAAX,CAAuBI,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKR,KAAL,CAAWC,WADM,CAAxB;;AAGAO,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAME,aAAa,GAAGf,iBAAiB,CAACW,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKV,KAAL,CAAWE,UAA5B;AACA,YAAMS,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAES,QAAb;AAAuBV,QAAAA,WAAW,EAAEO;AAApC,OAAd;AACH,KA9BiC;;AAAA,SAgClCK,uBAhCkC,GAgCPR,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,WAAX,CAAuBI,IAAvB,CAAjB;;AACA,UAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACf;AACH;;AACD,YAAMC,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKR,KAAL,CAAWC,WADM,CAAxB;;AAGAO,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACA,YAAMO,cAAc,GAAGpB,iBAAiB,CAACW,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKV,KAAL,CAAWE,UAA5B;AACA,YAAMS,QAAQ,GAAGD,QAAQ,GAAGI,cAA5B;AACA,WAAKF,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAES,QAAb;AAAuBV,QAAAA,WAAW,EAAEO;AAApC,OAAd;AACH,KA9CiC;AAAA;;AAYlCO,EAAAA,mBAAmB,GAAI;AACnB,UAAMd,WAAW,qBACV,KAAKD,KAAL,CAAWC,WADD,CAAjB;;AAGA,UAAMe,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYjB,WAAZ,CAAZ;AACH;;AA+BDkB,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,qBACV,KAAKpB,KAAL,CAAWC,WADD,CAAjB;;AAGA,SAAK,IAAIoB,GAAT,IAAgBD,WAAhB,EAA6B;AACzBA,MAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBD,WAAW,CAACC,GAAD,CAAX,IAAoB,CAAvC;AACH;;AACD,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AACI,MAAA,eAAe,EAAE,KAAKG,oBAD1B;AAEI,MAAA,iBAAiB,EAAE,KAAKS,uBAF5B;AAGI,MAAA,QAAQ,EAAEO,WAHd;AAII,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWE,UAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AAjEiC;;AAoEtC,eAAeH,aAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false\n    };\n\n    updatePurchaseState () {\n        const ingredients = {\n            ...this.state.ingredients\n        };\n        const sum = Object.keys(ingredients)\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n    };\n\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disableInfo}\n                    price={this.state.totalPrice}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}